import streamlit as st
import google.generativeai as genai
import os
from dotenv import load_dotenv

load_dotenv()

api_key = os.getenv("GEMINI_API_KEY")
if not api_key:
    st.error("Chave da API Gemini n칚o encontrada. Certifique-se de que a vari치vel de ambiente GEMINI_API_KEY est치 definida no arquivo .env.")
    st.stop() 

genai.configure(api_key=api_key)

model = genai.GenerativeModel('gemini-pro')

st.set_page_config(page_title="Analisador de Texto com IA", page_icon="游닇")

st.title("游닇 Analisador de Texto com IA")
st.markdown("Seu SaaS para an치lise de sentimentos, resumo e extra칞칚o de palavras-chave.")

user_text = st.text_area("Cole seu texto aqui para an치lise:", height=250)

if st.button("Analisar Texto"):
    if user_text:
        with st.spinner("Analisando... Por favor, aguarde."):
            try:
                prompt_sentimento = f"Qual o sentimento predominante (positivo, negativo, neutro ou misto) do seguinte texto? Responda de forma concisa em uma 칰nica palavra ou uma breve frase: '{user_text}'"
                response_sentimento = model.generate_content(prompt_sentimento)
                sentimento = response_sentimento.text.strip()

                prompt_resumo = f"Fa칞a um resumo conciso do seguinte texto, com no m치ximo 3 frases: '{user_text}'"
                response_resumo = model.generate_content(prompt_resumo)
                resumo = response_resumo.text.strip()

                prompt_keywords = f"Liste as 5 principais palavras-chave do seguinte texto, separadas por v칤rgulas: '{user_text}'"
                response_keywords = model.generate_content(prompt_keywords)
                keywords = response_keywords.text.strip()

                st.subheader("Resultados da An치lise:")

                st.write(f"**Sentimento:** {sentimento}")
                st.write(f"**Resumo:** {resumo}")
                st.write(f"**Palavras-chave:** {keywords}")

            except Exception as e:
                st.error(f"Ocorreu um erro ao processar seu texto: {e}")
                st.info("Por favor, tente novamente com um texto diferente ou verifique sua conex칚o com a internet/chave da API.")
    else:
        st.warning("Por favor, insira um texto para an치lise.")

st.sidebar.header("Sobre")
st.sidebar.info(
    "Este 칠 um SaaS de exemplo constru칤do com Streamlit e a API Gemini para "
    "demonstrar processamento de dados com IA."
)
